l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
print(agr_legs)
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
print(leg)
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
print(leg)
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
print(result)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
print(elo1)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
print(team1)
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
print(elo1)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
print(leg)
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
print(team1)
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
print(elo1)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- leg$TEAM1
team2 <- leg$TEAM2
l2date <- leg$L2D
print(team1)
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
str(legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
print(team1)
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
View(neutral_games)
View(neutral_games)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
print(team1)
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER - leg$WINNER)
game <- game %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
game <- game %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
View(neutral_games)
View(neutral_games)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
game <- game %>%
rowwise() %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- neutral_games(data = legs_info)
View(neutral_games)
View(neutral_games)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
return(result)
}
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
return(result)
}
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
View(neutral_games)
View(neutral_games)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
result <- result %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
return(result)
}
neutral_games <- neutral_games(data = legs_info)
simulated_games <- neutral_games(data = legs_info)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
result <- result %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
return(result)
}
simulated_games <- neutral_games(data = legs_info)
View(simulated_games)
View(simulated_games)
str(simulated_games)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = as.character(team1), TEAM2 = as.character(team2), WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
result <- result %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
return(result)
}
simulated_games <- neutral_games(data = legs_info)
View(simulated_games)
View(simulated_games)
str(simulated_games)
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
return(result)
}
simulated_games <- neutral_games(data = legs_info)
simulated_games <- neutral_games(data = legs_info)
simulated_games <- simulated_games %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
View(simulated_games)
View(simulated_games)
simulated_games <- neutral_games(data = legs_info)
simulated_games <- simulated_games %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
View(simulated_games)
View(simulated_games)
simulated_games$TEAM1 <- as.character(simulated_games$TEAM1)
simulated_games$TEAM2 <- as.character(simulated_games$TEAM2)
simulated_games <- simulated_games %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
neutral_games <- function(data) {
agr_legs <- data %>%
filter(TYPE == "AGR")
elo_teams <- unique(po_elos$team)
result <- c()
for(i in 1:nrow(agr_legs)){
leg <- agr_legs[i,]
team1 <- as.character(leg$TEAM1)
team2 <- as.character(leg$TEAM2)
l2date <- leg$L2D
if(team1 %in% elo_teams && team2 %in% elo_teams){
elo1 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team1)
elo2 <- get_elos_by_date(source = po_elos, game_date = l2date, game_team = team2)
wins.1 = elo.prob(elo.A = elo1,
elo.B = elo2)
wins.2 = 1 - wins.1
game <- data.frame(TEAM1 = team1, TEAM2 = team2, WINS.1 = wins.1, WINS.2 = wins.2,
LEG_ID = leg$LEG_ID, ACTUAL_WINNER = leg$WINNER)
result <- rbind(result, game)
}
}
result$TEAM1 <- as.character(result$TEAM1)
result$TEAM2 <- as.character(result$TEAM2)
result <- result %>%
mutate(NG_WINNER = ifelse(WINS.1 > WINS.2, TEAM1, TEAM2))
return(result)
}
simulated_games <- neutral_games(data = legs_info)
View(simulated_games)
View(simulated_games)
custom_elos$relative
View(games_no_rares)
View(games_no_rares)
length(unique(games_no_rares$DATE))
