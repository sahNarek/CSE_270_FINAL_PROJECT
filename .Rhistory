anti_join(el_teams)
cl_teams$TEAM <- res1
elo_ratings_2 <- elo_ratings %>%
filter(team %in% cl_teams$TEAM)
el_teams <- as.data.frame(unique(elo_ratings_2$team))
colnames(el_teams) <- "TEAM"
cl_teams <- cl_teams %>%
anti_join(el_teams)
res1 <- sapply(cl_teams$TEAM, str_remove_all, pattern = c("FC"))
res2 <- sapply(cl_teams$TEAM, str_remove_all, pattern = c("FC","CF","AC","SL"))
res2
res2 <- trimws(res2)
res2
cl_po_teams <- tables$TEAM
elo_ratings_1 <- elo_ratings %>%
filter(team %in% cl_po_teams)
cl_teams <- as.data.frame(cl_po_teams)
el_teams <- as.data.frame(unique(elo_ratings_1$team))
colnames(cl_teams) <- "TEAM"
colnames(el_teams) <- "TEAM"
cl_teams <- cl_teams %>%
anti_join(el_teams)
res2 <- sapply(cl_teams$TEAM, str_remove_all, pattern = c("FC","CF","AC","SL"))
res2 <- trimws(res2)
res2
res2 <- lapply(cl_teams$TEAM, str_remove_all, pattern = c("FC","CF","AC","SL"))
res2 <- trimws(res2)
res2
res2 <- apply(cl_teams$TEAM, str_remove_all, pattern = c("FC","CF","AC","SL"))
res2 <- sapply(cl_teams$TEAM, str_remove_all, pattern = c("FC","CF","AC","SL"))
res2 <- trimws(res2)
cl_teams$TEAM <- res2
res2 <- sapply(cl_teams$TEAM, str_remove_all, pattern = c("FC","CF","AC","SL"))
res2 <- trimws(res2)
View(res2)
View(res2)
cl_teams <- cl_teams %>%
anti_join(el_teams)
View(cl_teams)
View(cl_teams)
pattern = "^FC$|^CF$"
pattern = "^FC$|^CF$"
string <- "FCaaaCF"
str_remove_all(string, pattern = pattern)
pattern = "[^FC$|^CF$]"
string <- "FCaaaCF"
str_remove_all(string, pattern = pattern)
string <- "FC aaa CF"
str_remove_all(string, pattern = pattern)
string <- "FC aaa CF"
pattern = "[^FC$|^CF$]"
str_remove_all(string, pattern = pattern)
pattern = "[^FC$ | ^CF$]"
pattern = "[^FC$]"
string <- "FC aaa CF"
str_remove_all(string, pattern = pattern)
str_extract_all(string, pattern = pattern)
str_extract(string, pattern = pattern)
str_remove_all(string, pattern = pattern)
string <- "FCaaaCF"
str_extract_all(string, pattern = pattern)
str_extract(string, pattern = pattern)
str_extract_all(string, pattern = pattern)
pattern = "[^FC$ | ^CF$]"
string <- "FC aaa CF"
paste(str_extract_all(string, pattern = pattern))
paste0(unlist(str_extract_all(string, pattern = pattern)))
pattern = "FC | CF"
string <- "FC aaa CF"
str_extract_all(string, pattern = pattern)
str_remove_all(string, pattern = pattern)
string <- "FCaaaCF"
str_remove_all(string, pattern = pattern)
pattern = "AFC | FC | CF | SSC | AJ | KAA | VfL | SL"
teams <- sapply(cl_teams$TEAM, str_remove_all, pattern = pattern)
teams
pattern = "FC | CF | SSC | AJ | KAA | VfL | SL"
str_remove_all(string, pattern = pattern)
teams <- sapply(cl_teams$TEAM, str_remove_all, pattern = pattern)
teams
pattern = "AFC|FC|CF|SSC|AJ|KAA|VfL|SL"
str_remove_all(string, pattern = pattern)
teams <- sapply(cl_teams$TEAM, str_remove_all, pattern = pattern)
teams
pattern = "AFC|FC|CF|SSC|AJ|KAA|VfL|SL|AC"
str_remove_all(string, pattern = pattern)
teams <- sapply(cl_teams$TEAM, str_remove_all, pattern = pattern)
pattern = "AFC|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS"
str_remove_all(string, pattern = pattern)
teams <- sapply(cl_teams$TEAM, str_remove_all, pattern = pattern)
teams <- trimws(sapply(cl_teams$TEAM, str_remove_all, pattern = pattern))
teams
View(tables)
View(tables)
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS"
str_remove_all(string, pattern = pattern)
teams <- trimws(sapply(cl_teams$TEAM, str_remove_all, pattern = pattern))
teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|0-9"
str_remove_all(string, pattern = pattern)
teams <- trimws(sapply(cl_teams$TEAM, str_remove_all, pattern = pattern))
teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS"
str_remove_all(string, pattern = pattern)
teams <- trimws(sapply(teams, str_remove_all, pattern = "[0-9]"))
teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]"
teams <- trimws(sapply(cl_teams$TEAM, str_remove_all, pattern = pattern))
teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
str_remove_all(string, pattern = pattern)
teams <- trimws(sapply(cl_teams$TEAM, str_remove_all, pattern = pattern))
teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
teams <- trimws(sapply(cl_teams$TEAM, str_remove_all, pattern = pattern))
teams
cleaning_elos <- function(data,subset){
elo_ratings <- data %>%
filter(team %in% subset)
cl_teams <- as.data.frame(subset)
el_teams <- as.data.frame(unique(data$team))
colnames(cl_teams) <- "TEAM"
colnames(el_teams) <- "TEAM"
cl_teams <- cl_teams %>%
anti_join(el_teams)
return(list(elos = elo_ratings,
misssing_teams = cl_teams))
}
abc <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)
abc <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$elos
elo_ratings_1 <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$elos
missing_teams <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$missing_teams
cleaning_elos <- function(data,subset){
elo_ratings <- data %>%
filter(team %in% subset)
cl_teams <- as.data.frame(subset)
el_teams <- as.data.frame(unique(data$team))
colnames(cl_teams) <- "TEAM"
colnames(el_teams) <- "TEAM"
cl_teams <- cl_teams %>%
anti_join(el_teams)
return(list(elos = elo_ratings,
missing_teams = cl_teams))
}
cl_po_teams <- tables$TEAM
elo_ratings_1 <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$elos
missing_teams <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$missing_teams
View(missing_teams)
View(missing_teams)
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
teams <- trimws(sapply(missing_teams$TEAM, str_remove_all, pattern = pattern))
teams
missing_teams$TEAM <- teams
elo_ratings_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams)$elos
elo_ratings_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$TEAM)$elos
missing_teams_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$TEAM)$missing_teams
View(missing_teams_2)
View(missing_teams_2)
elo_ratings_1 <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$elos
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
packages_list <- c("ggplot2","dplyr", "scales", "stringdist", "magrittr",
"ggmap", "plotly", "SportsAnalytics270", "stringr")
install_or_call <- function(list = packages_list){
installed <- installed.packages()[,"Package"]
for( package in packages_list ){
if(!(package %in% installed)){
install.packages(package)
}
do.call(library, list(package))
}
}
install_or_call()
data("f_data_sm")
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
cl_po_teams <- tables$TEAM
elo_ratings_1 <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$elos
unique(elo_ratings_1$team)
missing_teams <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$missing_teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
teams <- trimws(sapply(missing_teams$TEAM, str_remove_all, pattern = pattern))
missing_teams$TEAM <- teams
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
teams <- trimws(sapply(missing_teams$TEAM, str_remove_all, pattern = pattern))
missing_teams$TEAM <- teams
View(missing_teams)
View(missing_teams)
View(missing_teams_2)
View(missing_teams_2)
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
teams <- trimws(sapply(missing_teams$TEAM, str_remove_all, pattern = pattern))
missing_teams$TEAM <- teams
View(missing_teams)
View(missing_teams)
missing_teams$TEAM <- teams
View(missing_teams)
View(missing_teams)
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
tables <- standings(data = all_games)
cl_po_teams <- tables$TEAM
elo_ratings_1 <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$elos
missing_teams <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$missing_teams
unique(elo_ratings_1$team)
elo_matched_1 <- data.frame(TEAM = unique(elo_ratings_1$team), ELO.TEAM = unique(elo_ratings_1$team))
View(elo_matched_1)
View(elo_matched_1)
missing_teams <- cleaning_elos(data = elo_ratings, subset = cl_po_teams)$missing_teams
View(missing_teams)
View(missing_teams)
pattern = "AFC|ACF|FC|CF|SSC|AJ|KAA|VfL|SL|AC|AS|[0-9]|\\."
teams <- trimws(sapply(missing_teams$TEAM, str_remove_all, pattern = pattern))
missing_teams$ELO.TEAM <- teams
elo_ratings_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$ELO.TEAM)$elos
missing_teams_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$ELO.TEAM)$missing_teams
View(missing_teams_2)
View(missing_teams_2)
View(elo_ratings)
View(elo_ratings)
missing_teams_3 %>%
anti_join(missing_teams_2, by = TEAM)
missing_teams_3 <- missing_teams %>%
anti_join(missing_teams_2, by = TEAM)
missing_teams_3 <- missing_teams %>%
anti_join(missing_teams_2, by = c("TEAM"))
View(missing_teams_3)
View(missing_teams_3)
elo_ratings_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$ELO.TEAM)$elos
missing_teams_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$ELO.TEAM)$missing_teams
View(missing_teams_2)
View(missing_teams_2)
View(missing_teams_3)
View(missing_teams_3)
View(elo_ratings_2)
View(elo_ratings_2)
missing_teams$ELO.TEAM <- teams
elo_ratings_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$ELO.TEAM)$elos
missing_teams_2 <- cleaning_elos(data = elo_ratings, subset = missing_teams$ELO.TEAM)$missing_teams
View(missing_teams_3)
View(missing_teams_3)
View(missing_teams_2)
View(missing_teams_2)
View(missing_teams_2)
View(missing_teams_2)
View(missing_teams)
View(missing_teams)
missing_teams %>%
anti_join(missing_teams_2, by = c("TEAM"))
missing_teams_2$ELO.TEAM <- missing_teams_2$TEAM
missing_teams %>%
anti_join(missing_teams_2)
missing_teams_3 <- missing_teams %>%
anti_join(missing_teams_2)
View(missing_teams_3)
View(missing_teams_3)
missing_teams$ELO.TEAM <- teams
unique(elo_ratings_2$team)
View(missing_teams)
View(missing_teams)
missing_teams_3 <- missing_teams %>%
filter(!(ELO.TEAM %in% unique(elo_ratings_2$team)))
missing_teams_3 <- missing_teams %>%
filter(!(ELO.TEAM %in% unique(elo_ratings_2$team)))
View(missing_teams_3)
View(missing_teams_3)
View(elo_ratings)
View(elo_ratings)
missing_teams_3$ELO.TEAM <- c("PSG","Internazionale","Olympique Lyonnais",
"Schalke 04","Bordeaux","PSV", "Zenit",
"Olympiakos Piraeus", "APOEL", "Lazio", "Stuttgart")
missing_teams_3[-c(1),]
missing_teams_3 <- missing_teams_3[-c(5,7,9,14,15,16,17,18,20,21),]
missing_teams_3$ELO.TEAM <- c("PSG","Internazionale","Olympique Lyonnais",
"Schalke 04","Bordeaux","PSV", "Zenit",
"Olympiakos Piraeus", "APOEL", "Lazio", "Stuttgart")
elo_ratings_3 <- cleaning_elos(data = elo_ratings, subset = missing_teams_3$ELO.TEAM)$elos
missing_teams_4 <- cleaning_elos(data = elo_ratings, subset = missing_teams_3$ELO.TEAM)$missing_teams
save(tables, file = "data/po_table.rda")
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
load("data/po_elos.rda")
save(po_elos, "../data/po_elos.rda")
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
View(table)
View(table)
wpct_table <- cl_po_k(table)
cor.test(wpct_table$WPCT, wpct_table$FTGD)
ggplot(wpct_table, aes(x = EWPCT, y = WPCT, label = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red") +
geom_text()
p <- ggplot(gapminder, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red")
p <- ggplot(wpct_table, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red")
p <- ggplotly(p)
p
p <- ggplot(wpct_table, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red") +
ggtitle("EXPECTED WIN PERCENTAGE VS ACTUAL")
p <- ggplotly(p)
p <- ggplot(wpct_table, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red") +
ggtitle("EXPECTED WIN PERCENTAGE VS ACTUAL")
p <- ggplotly(p)
p <- ggplotly(p)%>%
layout(title = "NUMBER OF PO MATCHES BY TEAMS",
yaxis = list(showgrid = F, zeroline = F, showticklabels = F),
xaxis = list(showgrid = T, zeroline = F, showticklabels = T))
p
p <- ggplotly(p)%>%
layout(title = "EXPECTED WIN PERCENTAGE VS ACTUAL",
yaxis = list(showgrid = F, zeroline = F, showticklabels = F),
xaxis = list(showgrid = T, zeroline = F, showticklabels = T))
p
lucky_teams <- wpct_table %>%
filter(WPCT > EWPCT)
View(lucky_teams)
View(lucky_teams)
unlucky_teams <- wpct_table %>%
filter(WPCT < EWPCT)
expected_teams <- wpct_table %>%
filter(WPCT == EWPCT)
View(expected_teams)
View(expected_teams)
wpct_table_1 <- wpct_table %>%
filter(M >= 4)
p1 <- ggplot(wpct_table_1, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red") +
ggtitle()
p1 <- ggplot(wpct_table_1, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red") +
ggtitle()
p1 <- ggplot(wpct_table_1, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red")
p1 <- ggplotly(p)%>%
layout(title = "EXPECTED WIN PERCENTAGE VS ACTUAL",
yaxis = list(showgrid = F, zeroline = F, showticklabels = F),
xaxis = list(showgrid = T, zeroline = F, showticklabels = T))
p1
wpct_table_1 <- wpct_table %>%
filter(M >= 4)
View(wpct_table_1)
View(wpct_table_1)
View(wpct_table)
View(wpct_table)
p1 <- ggplot(wpct_table_1, aes(x = EWPCT, y = WPCT, text = TEAM)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "red")
p1 <- ggplotly(p1)%>%
layout(title = "EXPECTED WIN PERCENTAGE VS ACTUAL",
yaxis = list(showgrid = F, zeroline = F, showticklabels = F),
xaxis = list(showgrid = T, zeroline = F, showticklabels = T))
p1
lucky_teams_1 <- wpct_table_1 %>%
filter(WPCT > EWPCT)
unlucky_teams_1 <- wpct_table_1 %>%
filter(WPCT < EWPCT)
expected_teams_1 <- wpct_table_1 %>%
filter(WPCT == EWPCT)
View(lucky_teams_1)
View(lucky_teams_1)
lucky_teams %>%
anti_join(lucky_teams_1)
packages_list <- c("ggplot2","dplyr", "scales",
"plotly", "stringr", "elo")
install_or_call <- function(list = packages_list){
installed <- installed.packages()[,"Package"]
for( package in packages_list ){
if(!(package %in% installed)){
install.packages(package)
}
do.call(library, list(package))
}
}
install_or_call()
View(all_games)
View(all_games)
View(all_games)
View(all_games)
elo.run(score(FTHG, FTAG) ~ adjust(HOMETEAM, 200) + AWAYTEAM +
k(30 * (all_games$FTHG - all_games$FTAG)), data = all_games)
all_time_elos <- elo.run(score(FTHG, FTAG) ~ adjust(HOMETEAM, 200) + AWAYTEAM +
k(30 * (all_games$FTHG - all_games$FTAG)), data = all_games)
sort(all_time_elos, decreasing = T)
all_time_elos <- elo.run(score(FTHG, FTAG) ~ adjust(HOMETEAM, 200) + AWAYTEAM +
k(30 * (all_games$FTHG - all_games$FTAG)), data = all_games)
View(all_time_elos)
View(all_time_elos)
sort(final.elos(all_time_elos), decreasing = T)
get_elos <- function(final_elos, def_elo = 1500){
starting_elos <- c()
if(length(final_elos) == 0){
starting_elos = def_elo
}
else{
starting_elos <- (def_elo) + (final_elos - def_elo)/2
}
return(starting_elos)
}
make_final_elos_df <- function(final_elos){
final_elos <- as.data.frame(final_elos)
final_elos$TEAM <- rownames(final_elos)
colnames(final_elos) <- c("ELO", "TEAM")
rownames(final_elos) <- 1:length(final_elos$TEAM)
final_elos <- final_elos[c("TEAM", "ELO")]
return(final_elos)
}
get_elos <- function(final_elos, def_elo = 1500){
starting_elos <- c()
if(length(final_elos) == 0){
starting_elos = def_elo
}
else{
starting_elos <- (def_elo) + (final_elos - def_elo)/2
}
return(starting_elos)
}
calculate_relative_elos <- function(data){
relative_df <- c()
final_elos <- c()
for(season in unique(data$SEASON)){
starting_elos <- get_elos(final_elos, def_elo = 1500)
season_data <- data[data$SEASON == season,]
season_elos <- elo.run(score(FTHG, FTAG) ~ adjust(HOMETEAM, 200) + AWAYTEAM +
k(30 * (all_games$FTHG - all_games$FTAG)), data = all_games,
initial.elos = starting_elos)
season_final_elos <- final.elos(season_elos)
season_elos <- data.frame(SEASON = season,season_elos)
relative_df <- rbind(relative_df, season_elos)
final_elos <- season_final_elos
}
final_elos <- make_final_elos_df(final_elos)
return(list(relative = relative_df, elos_df = final_elos))
}
aa <- calculate_relative_elos(data = all_games)
aa$relative
aa$elos_df
aa$relative
View(wpct_table)
View(wpct_table)
games_no_rares <- all_games %>%
filter(HOMETEAM %in% wpct_table$TEAM && AWAYTEAM %in% wpct_table$TEAM)
aa <- calculate_relative_elos(data = games_no_rares)
aa$elos_df
games_no_rares <- all_games %>%
filter(HOMETEAM %in% wpct_table$TEAM && AWAYTEAM %in% wpct_table$TEAM)
aa <- calculate_relative_elos(data = games_no_rares)
aa$elos_df
games_no_rares <- all_games %>%
filter(HOMETEAM %in% wpct_table$TEAM && AWAYTEAM %in% wpct_table$TEAM)
View(games_no_rares)
View(games_no_rares)
aa <- calculate_relative_elos(data = games_no_rares)
aa$elos_df
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
source('~/workspace/SportsAnalytics/ET_Analysis/analysis.R', echo=TRUE)
aa$elos_df <- aa$elos_df %>%
filter(TEAM %in% wpct_table$TEAM)
aa$elos_df <- aa$elos_df %>%
filter(TEAM %in% wpct_table$TEAM)
aa$elos_df
aa <- calculate_relative_elos(data = games_no_rares)
aa$elos_df <- aa$elos_df %>%
filter(TEAM %in% wpct_table_1$TEAM)
aa$elos_df
aa$elos_df <- aa$elos_df %>%
filter(TEAM %in% wpct_table_1$TEAM) %>%
arrange(desc(ELO))
aa$elos_df
View(et_minutes)
View(et_minutes)
gold_minutes <- et_minutes %>%
filter(MINUTE > 90) %>%
group_by(LEG_ID) %>%
summarise(MINUTE = min(MINUTE))
View(gold_minutes)
View(gold_minutes)
et_minutes %>%
inner_join(gold_minutes, by = c("MINUTE", "LEG_ID"))
gold_goal <- function(data) {
gold_minutes <- data %>%
filter(MINUTE > 90) %>%
group_by(LEG_ID) %>%
summarise(MINUTE = min(MINUTE))
winners <- data %>%
inner_join(gold_minutes, by = c("MINUTE", "LEG_ID"))
}
gold_goal <- function(data) {
gold_minutes <- data %>%
filter(MINUTE > 90) %>%
group_by(LEG_ID) %>%
summarise(MINUTE = min(MINUTE))
winners <- data %>%
inner_join(gold_minutes, by = c("MINUTE", "LEG_ID"))
return(winners)
}
golden_goal_winners <- gold_goal(data = et_minutes)
View(golden_goal_winners)
View(golden_goal_winners)
actual_winners <- legs_info %>%
filter(LEG_ID %in% golden_goal_winners$LEG_ID)
View(actual_winners)
View(actual_winners)
